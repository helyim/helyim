syntax = "proto3";
package volume;

service VolumeServer {
  rpc AllocateVolume (AllocateVolumeRequest) returns (AllocateVolumeResponse) {}

  rpc VacuumVolumeCheck (VacuumVolumeCheckRequest) returns (VacuumVolumeCheckResponse) {
  }
  rpc VacuumVolumeCompact (VacuumVolumeCompactRequest) returns (VacuumVolumeCompactResponse) {
  }
  rpc VacuumVolumeCommit (VacuumVolumeCommitRequest) returns (VacuumVolumeCommitResponse) {
  }
  rpc VacuumVolumeCleanup (VacuumVolumeCleanupRequest) returns (VacuumVolumeCleanupResponse) {
  }

}

message AllocateVolumeRequest {
  repeated uint32 volumes = 1;
  string collection = 2;
  string replication = 3;
  string ttl = 4;
  int64 preallocate = 5;
}
message AllocateVolumeResponse {
}

message VacuumVolumeCheckRequest {
  uint32 volume_id = 1;
}
message VacuumVolumeCheckResponse {
  double garbage_ratio = 1;
}

message VacuumVolumeCompactRequest {
  uint32 volume_id = 1;
  int64 preallocate = 2;
}
message VacuumVolumeCompactResponse {
}

message VacuumVolumeCommitRequest {
  uint32 volume_id = 1;
}
message VacuumVolumeCommitResponse {
  bool is_read_only = 1;
}

message VacuumVolumeCleanupRequest {
  uint32 volume_id = 1;
}
message VacuumVolumeCleanupResponse {
}
